{"version":3,"sources":["nav.js","about.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/pagination.jsx","utils/paginate.js","components/listGroup.jsx","services/authService.js","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","components/like.jsx","components/moviesTable.jsx","components/movies.jsx","components/notFound.jsx","components/input.jsx","components/form.jsx","components/loginForm.jsx","services/userService.js","services/firebase.js","components/registerForm.jsx","components/newForm.jsx","components/logout.jsx","components/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","user","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","name","About","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","MovieUrl","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","map","page","key","onClick","paginate","items","pageNumber","startIndex","slice","ListGroup","valueProperty","textProperty","selectedItem","onItemSelect","item","style","cursor","defaultProps","email","password","a","loginWithJwt","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","Table","Like","state","classes","likes","MoviesTable","title","liked","onLike","deleteColunmn","onDelete","auth","isAdmin","push","movies","Movies","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePagechange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allmovies","filtered","toLowerCase","orderBy","totalCount","length","count","placeholder","value","onChange","e","currentTarget","NotFound","Input","rest","htmlFor","autoFocus","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","LoginForm","username","string","required","location","window","from","pathname","onSubmit","renderInput","renderButton","register","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","addUser","collection","add","first","last","born","then","docRef","catch","RegisterForm","minDomainAtoms","min","userService","NewForm","genreId","numberInStock","dailyRentalRate","number","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovies","option","Logout","ProtectedRoute","component","render","App","exact","Boolean","hostname","process","REACT_APP_NAME","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eae7ad3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Nav = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Radiooo\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/shop\">\n            Movies\n          </NavLink>\n\n          <NavLink className=\"nav-item nav-link\" to=\"/about\">\n            About\n          </NavLink>\n\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link \" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link \" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link \" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link \" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './App.css';\n\nfunction About() {\n  return (\n    <div>\n      <h1>About page</h1>\n    </div>\n  );\n}\n\nexport default About;","//import * as Sentry from \"@sentry/browser\";\n\nfunction init() {\n  // Sentry.init({\n  //   dsn:\n  //     \"https://371b563167a84fbe87d8d7f3ce985f31@o412125.ingest.sentry.io/5288390\",\n  // });\n}\n\nfunction log(error) {\n  //Sentry.captureException(error);\n  console.error(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from './logService';\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n      logger.log(error);\n    //console.log(\"Logging the error\", error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt){\n  axios.defaults.headers.common['x-auth-token']=jwt;\n}\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from './httpService';\nimport {apiUrl} from '../config.json';\n\nconst apiEndpoint = apiUrl+'/movies';\n\nfunction MovieUrl(id){\n    return `${apiEndpoint}/${id}`\n}\nexport function getMovies(){\n    return http.get(apiEndpoint)\n}\nexport function getMovie(movieId){\n    return http.get(MovieUrl(movieId));\n}\n\nexport function saveMovie(movie){\n    if(movie._id){\n        const body={...movie};\n        delete body._id;\n        return http.put(MovieUrl(movie._id),body);\n    }\n    return http.post(apiEndpoint,movie);\n}\n\nexport function deleteMovie(movieId){\n    return http.delete(MovieUrl(movieId));\n}\n","import http from './httpService';\nimport {apiUrl} from '../config.json';\n\nexport function getGenres(){\n    return http.get(apiUrl+'/genres');\n}","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from 'prop-types';\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize ,currentPage,onPageChange} = props;\n  //console.log(currentPage);\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if(pagesCount===1){return null;}\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li key={page} className={page ===currentPage? 'page-item active':'page-item'}>\n            <button className=\"page-link\" onClick={()=> onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount:PropTypes.number.isRequired,\n   pageSize:PropTypes.number.isRequired,\n   currentPage:PropTypes.number.isRequired,\n   onPageChange:PropTypes.func.isRequired,\n}; //检查类型\n\nexport default Pagination;\n","//import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  //return _(items).slice(startIndex).take(pageSize).value();\n  return items.slice(startIndex,startIndex+pageSize);\n}\n","import React from \"react\";\nconst ListGroup = (props) => {\n  const {\n    items,\n    valueProperty,\n    textProperty,\n    selectedItem,\n    onItemSelect,\n  } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n          style={{ cursor: \"pointer\" }}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\n\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey='token';\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  loginWithJwt(jwt);\n}\nexport function loginWithJwt(jwt){\n   localStorage.setItem(tokenKey,jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt(){\n   return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React, { Component } from \"react\";\n\n// columns: array\n//sortColumn: object\n//onSort:function\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n  renderSortIcon=column=>{\n    const{sortColumn} =this.props;\n    if(column.path!==sortColumn.path) return null;\n    if(sortColumn.order=== 'asc') return <i className='fa fa-sort-asc'></i>\n    return <i className='fa fa-sort-desc'></i>\n  };\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label}{this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Like extends Component {\n  state = {};\n  render() {\n    let classes = \"fa fa-heart\";\n    if (!this.props.likes) classes += \"-o\";\n    return (\n      <i\n        onClick={this.props.onClick}\n        style={{ cursor: \"pointer\" }}\n        className={classes}\n      ></i>\n    );\n  }\n}\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport auth from '../services/authService';\nimport Table from \"./table\";\nimport Like from \"./like\";\nimport { Link } from 'react-router-dom';\n\nclass MoviesTable extends Component {\n  columns = [\n    { path: \"title\", label: \"Title\", content: movie=><Link to={`shop/${movie._id}`}>{movie.title}</Link> },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like likes={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n  ];\n\n  deleteColunmn={\n    \n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      )\n    \n  }\n\n  constructor(){\n    super();\n    const user=auth.getCurrentUser();\n    if(user&&user.isAdmin){\n      this.columns.push(this.deleteColunmn);\n    }\n  }\n  render() {\n    const { movies, onSort, sortColumn} = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie has already been deleted.\");\n        this.setState({ movies: originalMovies });\n      }\n    }\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n    //console.log('like clicked',movie);\n  };\n  handlePagechange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n  getPagedData = () => {\n    const {\n      movies: allmovies,\n      selectedGenre,\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n\n    let filtered = allmovies;\n    if (searchQuery)\n      filtered = allmovies.filter(\n        (m) => m.title.toLowerCase().indexOf(searchQuery.toLowerCase()) === 0\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allmovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, movies: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p>There are no movies in the database</p>;\n\n    const { totalCount, movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link to=\"/shop/new\">\n              <button className=\"btn btn-primary\">New Movie</button>\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={searchQuery}\n            onChange={(e) => this.handleSearch(e.currentTarget.value)}\n          />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePagechange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react';\n\nconst NotFound = () => {\n    return (<h1>Not Found</h1> );\n}\n \nexport default NotFound;","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        autoFocus\n        {...rest}\n        name={name}\n        id={name}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    console.log(errors);\n    return errors;\n  };\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    //call the server\n\n    this.doSubmit();\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n  renderInput(name, label, type='text') {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        id={name}\n        value={data[name]}\n        onChange={this.handleChange}\n        className=\"form-control\"\n        error={errors[name]}\n        label={label}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\";\nimport auth from \"../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n      const {state}=this.props.location;\n      window.location=state? state.from.pathname:'/shop';\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if(auth.getCurrentUser()) return <Redirect to='/shop'/>\n    return (\n      <div>\n        <h1>Log in</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from './httpService';\nimport {apiUrl} from '../config.json';\n\nconst apiEndpoint = apiUrl+'/users';\n\nexport function register(user){\n    return http.post(apiEndpoint,{\n        email:user.username,\n        password:user.password,\n        name: user.name\n    })\n}","// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAzvWajdrecUWIokjb3rcl7rA07LeV3QQU\",\n    authDomain: \"radiooo-199722.firebaseapp.com\",\n    databaseURL: \"https://radiooo-199722.firebaseio.com\",\n    projectId: \"radiooo-199722\",\n    storageBucket: \"radiooo-199722.appspot.com\",\n    messagingSenderId: \"811423475584\",\n    appId: \"1:811423475584:web:eb616277119fa1b6d28365\",\n    measurementId: \"G-V2CLVRF0WP\"\n  };\n  \n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar db = firebase.firestore();\n\nexport function addUser(){\ndb.collection(\"users\").add({\n  first: \"Ada\",\n  last: \"Lovelace\",\n  born: 1815\n})\n.then(function(docRef) {\n  console.log(\"Document written with ID: \", docRef.id);\n})\n.catch(function(error) {\n  console.error(\"Error adding document: \", error);\n});\n}","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\";\nimport * as userService from \"../services/userService\";\nimport { addUser } from '../services/firebase';\nimport auth from '../services/authService';\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().email({ minDomainAtoms: 2 }).label(\"Email\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = async () => {\n    try{\n      const response= await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers['x-auth-token']);\n      window.location='/shop';\n    }\n    catch(ex){\n      if(ex.response&&ex.response.status===400){\n        const errors = {...this.state.errors};\n        errors.username= ex.response.data;\n        this.setState({errors});\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <button onClick={addUser}>send to firebase</button>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass NewForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number().min(0).max(100).required().label(\"Stock\"),\n    dailyRentalRate: Joi.number().max(10).required().label(\"Rate\"),\n  };\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n  async populateMovies() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n  async componentDidMount() {\n    this.populateGenres();\n    this.populateMovies();\n  }\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n  doSubmit = async() => {\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/shop\");\n  };\n\n  render() {\n    const { errors: error } = this.state;\n\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          <div className=\"form-group\">\n            <label htmlFor=\"genreId\">Genre</label>\n            <select\n              name=\"genreId\"\n              onChange={this.handleChange}\n              value={this.state.data.genreId}\n              className=\"form-control\"\n              id=\"genreId\"\n              error={this.state.errors.genreId}\n            >\n              <option value=\"\" />\n              {this.state.genres.map((option) => (\n                <option key={option._id} value={option._id}>\n                  {option.name}\n                </option>\n              ))}\n            </select>\n            {error.genreId && (\n              <div className=\"alert alert-danger\">{error.genreId}</div>\n            )}\n          </div>\n          {this.renderInput(\"numberInStock\", \"Stock\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewForm;\n","import { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\n\nconst ProtectedRoute = ({component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => { \n        if (!auth.getCurrentUser()) return <Redirect to={{\n            pathname:'/login',\n            state:{from: props.location}                \n        }} />;\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Nav from \"./nav\";\nimport About from \"./about\";\nimport Movies from \"./components/movies\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport NewForm from \"./components/newForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from './components/protectedRoute';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport auth from \"./services/authService\";\n\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <Router>\n        <ToastContainer />\n        <Nav user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact component={Movies} />\n            <Route path=\"/about\" component={About} />\n            <Route\n              path=\"/shop\"\n              exact\n              //render={(props) => <Movies {...props} user={user} />}\n              render={()=><Movies user={user} />}\n            />\n            <ProtectedRoute\n              path=\"/shop/:id\"\n              component={NewForm}\n            />\n            <Route path=\"/shop/new\" component={NewForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log(\"SUPERMAN\",process.env.REACT_APP_NAME);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}